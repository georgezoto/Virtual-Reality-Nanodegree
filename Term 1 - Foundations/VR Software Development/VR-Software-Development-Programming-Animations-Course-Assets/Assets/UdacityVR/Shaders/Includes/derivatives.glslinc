//Partial Derivatives
//vec3 derive_axes(in vec3 position, in float delta);
//vec3 derive_tetrahedron(in vec3 position, in float delta);

vec3 derive_axis(in vec3 position, in float delta)
{
	vec3 derivative     = vec3(0.);
	vec2 offset			= vec2(.0, delta);

	derivative.x    	= map(position + offset.yxx) - map(position - offset.yxx);
	derivative.y    	= map(position + offset.xyx) - map(position - offset.xyx);
	derivative.z    	= map(position + offset.xxy) - map(position - offset.xxy);
	return derivative;
}

vec3 derive_tetrahedron(in vec3 position, in float delta)
{
	vec3 x = vec3( delta, -delta, -delta);
	vec3 y = vec3(-delta, -delta,  delta);
	vec3 z = vec3(-delta,  delta, -delta);
	vec3 w = vec3( delta,  delta,  delta);

	x *= map(position + x);
	y *= map(position + y);
	z *= map(position + z);
	w *= map(position + w);

	return(x + y + z + w);
}
//