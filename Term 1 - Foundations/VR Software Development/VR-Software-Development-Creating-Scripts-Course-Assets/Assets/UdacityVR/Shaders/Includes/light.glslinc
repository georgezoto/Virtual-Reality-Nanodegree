//BRDF bomponents and light related stuff
float fresnel(const in float i, const in float ndl);
float geometry(in float i, in float ndl, in float ndv);
float distribution(const in float r, const in float ndh);
float flare(in vec3 origin, in vec3 direction, in vec3 light_position, in float range);

//float fresnel(const in float i, const in float ndl)
//{   
//	return i + (1.-i) * pow(abs(1.-ndl), 5.0);
//}
//
// 
//float geometry(in float i, in float ndl, in float ndv)
//{
//	ndl             = max(ndl, 0.);
//	ndv             = max(ndv, 0.);
//	float k         = i * sqrt(2./PI);
//	float ik        = 1. - k;
//	return (ndl / (ndl * ik + k)) * ( ndv / (ndv * ik + k) );
//}
//
//
//float distribution(const in float r, const in float ndh)
//{  
//	float m     = 2./(r*r) - 1.;
//	return (m+r)*pow(abs(ndh), m)*.5;
//}


float flare(in vec3 origin, in vec3 direction, in vec3 light_position, in float range)
{
	if(range < distance(origin, light_position)) { return 0.; }

	float f = dot(light_position - origin, direction);
	f = clamp(f, 0.0, range * 2.);
	vec3 p = origin + direction * f;
	f = length(p - light_position);
	return  clamp(0.001 / (f * f), 0., 1.);
}
//